/*
 * Copyright(c) 2012-2018 Intel Corporation
 * SPDX-License-Identifier: BSD-3-Clause-Clear
 */
syntax = "proto3";
option cc_generic_services = true;
import "defs.proto";
import "opts.proto";
package octf.proto;

message TraceRepositoryPath {
    string path = 1 [
        (opts_param).cli_required = true,
        (opts_param).cli_long_key = "path",
        (opts_param).cli_short_key = "p",
        (opts_param).cli_desc = "Trace repository path"
    ];
}

// General trace operations, possibly common for both producer and consumer
service InterfaceConfiguration {
    option (opts_interface).cli = true;

    option (opts_interface).version = 1;

    option (opts_interface).cli_long_key = "trace-config";

    option (opts_interface).cli_short_key = "C";

    option (opts_interface).cli_desc = "Manages trace configuration";

    rpc getTraceRepositoryPath(Void) returns (TraceRepositoryPath) {
        option (opts_command).cli = true;

        option (opts_command).cli_long_key = "get-trace-repository-path";

        option (opts_command).cli_short_key = "G";

        option (opts_command).cli_desc =
            "Returns location of trace repository path";
    }

    rpc setTraceRepositoryPath(TraceRepositoryPath) returns (Void) {
        option (opts_command).cli = true;

        option (opts_command).cli_long_key = "set-trace-repository-path";

        option (opts_command).cli_short_key = "S";

        option (opts_command).cli_desc =
            "Sets location of trace repository path";
    }
}
