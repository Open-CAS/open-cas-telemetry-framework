/*
 * Copyright(c) 2012-2018 Intel Corporation
 * SPDX-License-Identifier: BSD-3-Clause-Clear
 */

syntax = "proto3";
option cc_generic_services = true;
import "defs.proto";
import "opts.proto";
import "traceDefinitions.proto";
package octf.proto;

message StartTraceRequest {
    uint32 maxDuration = 1 [
        (opts_param).cli_required = false,
        (opts_param).cli_short_key = "d",
        (opts_param).cli_long_key = "duration",
        (opts_param).cli_desc = "Max trace duration time (in seconds)",

        (opts_param).cli_num.min = 10,
        (opts_param).cli_num.max = 3600,
        (opts_param).cli_num.default_value = 3600
    ];

    uint32 maxSize = 2 [
        (opts_param).cli_required = false,
        (opts_param).cli_short_key = "s",
        (opts_param).cli_long_key = "size",
        (opts_param).cli_desc = "Max size of trace file (in MiB)",

        (opts_param).cli_num.min = 1,
        (opts_param).cli_num.max = 4096,
        (opts_param).cli_num.default_value = 4096
    ];

    uint32 circBufferSize = 3 [
        (opts_param).cli_required = false,
        (opts_param).cli_short_key = "b",
        (opts_param).cli_long_key = "buffer",
        (opts_param).cli_desc = "Size of the internal trace buffer (in MiB)",

        (opts_param).cli_num.min = 1,
        (opts_param).cli_num.max = 1024,
        (opts_param).cli_num.default_value = 100
    ];

    string label = 4 [
        (opts_param).cli_required = false,
        (opts_param).cli_short_key = "l",
        (opts_param).cli_long_key = "label",
        (opts_param).cli_desc = "User defined label"
    ];
}

service InterfaceTraceCreating {
    option (opts_interface).cli = true;

    option (opts_interface).version = 1;

    rpc StartTracing(StartTraceRequest) returns (Void) {
        option (opts_command).cli = true;

        option (opts_command).cli_long_key = "start-trace";

        option (opts_command).cli_desc =
            "This command will begin collecting telemetry data from the drive";
    }

    rpc StopTracing(Void) returns (TraceSummary) {
        option (opts_command).cli = true;

        option (opts_command).cli_long_key = "stop-trace";

        option (opts_command).cli_desc = "This command will preemptively end "
                                         "collecting of telemetry data from "
                                         "the drive";
    }

    rpc GetTraceSummary(Void) returns (TraceSummary) {
        option (opts_command).cli = true;

        option (opts_command).cli_long_key = "get-trace-status";

        option (opts_command).cli_desc = "This command will return the "
                                         "status of an ongoing telemetry "
                                         "collection";
    }
}
